import React, { useState } from "react";
import { fillPdf } from "../utils/peselPdfHelper.js";
import * as Yup from "yup";
import { Formik, Form, Field, ErrorMessage } from "formik";
import { AiOutlineCloseCircle } from "react-icons/ai";
import css from "./PeselForm.module.css";

// ‚úÖ –í–∞–ª–∏–¥–∞—Ç–æ—Ä –ø–æ–ª—å—Å–∫–∏—Ö –±—É–∫–≤
const polishRegex = /^[a-zA-ZƒÖƒáƒô≈Ç≈Ñ√≥≈õ≈º≈∫ƒÑƒÜƒò≈Å≈É√ì≈ö≈ª≈π\s-]+$/;

// ‚úÖ –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Yup
const PeselSchema = Yup.object().shape({
  imie: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  nazwisko: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  ulica: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  numerDomu: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  numerLokalu: Yup.string(),
  kodPocztowy: Yup.string()
    .matches(/^[0-9]{2}-[0-9]{3}$/, "Format: 00-000 / Format: 00-000 / –§–æ—Ä–º–∞—Ç: 00-000"),
  miejscowosc: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  imiePierwszeKtorejDotyczyWniosek: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  imieDrugieKtorejDotyczyWniosek: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏"),
  imieKolejneKtorejDotyczyWniosek: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏"),
  nazwiskoKtorejDotyczyWniosek: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  plec: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  dataUrodzenia: Yup.date().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  krajUrodzenia: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  krajMiejscaZamieszkania: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  obywatelstwo: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  obywatelstwoInne: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  numerPaszportu: Yup.string(),
  dataWaznosciPaszportu: Yup.date(),
  numerPodrozy: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  dataWaznosciPodrozy: Yup.date().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  nazwiskoRodowe: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  miejsceUrodzenia: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  oznaczenieAktuUrodzenia: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  oznaczenieUrzeduAktUrodzenia: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  imieOjca: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  nazwiskoRodoweOjca: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  imieMatki: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  nazwiskoRodoweMatki: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  numerDowodu: Yup.string(),
  dataWaznosciDowodu: Yup.date(),
  oznaczenieOrganuKtoryWydalDowod: Yup.string(),
  stanCywilny: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  imieMalzonka: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  nazwiskoRodoweMalzonka: Yup.string()
    .matches(polishRegex, "Dozwolone tylko polskie litery / Only Polish letters allowed / –î–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –ø–æ–ª—å—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  numerPeselMalzonka: Yup.string()
    .matches(/^[0-9]+$/, "Tylko cyfry / Only digits / –õ–∏—à–µ —Ü–∏—Ñ—Ä–∏")
    .length(11, "PESEL musi mieƒá 11 cyfr / PESEL must have 11 digits / PESEL –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ 11 —Ü–∏—Ñ—Ä")
    .required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  zdazenie: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  dataZdazenia: Yup.date().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  oznaczenieAktuMalzenstwa: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  oznaczenieUrzeduStanuCywilnego: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  version: Yup.string().required("Wymagane / Required / –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ"),
  adresElektroniczny: Yup.string().email("Niepoprawny email / Invalid email / –ù–µ–≤—ñ—Ä–Ω–∏–π email"),
});


// ‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
const defaultValues = {
  imie: "",
  nazwisko: "",
  ulica: "",
  numerDomu: "",
  numerLokalu: "",
  kodPocztowy: "",
  miejscowosc: "",
  imiePierwszeKtorejDotyczyWniosek: "",
  imieDrugieKtorejDotyczyWniosek: "",
  imieKolejneKtorejDotyczyWniosek: "",
  nazwiskoKtorejDotyczyWniosek: "",
  plec: "",
  dataUrodzenia: "",
  krajUrodzenia: "",
  krajMiejscaZamieszkania: "",
  obywatelstwo: "",
  obywatelstwoInne: "",
  numerPaszportu: "",
  dataWaznosciPaszportu: "",
  numerPodrozy: "",
  dataWaznosciPodrozy: "",
  nazwiskoRodowe: "",
  miejsceUrodzenia: "",
  oznaczenieAktuUrodzenia: "",
  oznaczenieUrzeduAktUrodzenia: "",
  imieOjca: "",
  nazwiskoRodoweOjca: "",
  imieMatki: "",
  nazwiskoRodoweMatki: "",
  numerDowodu: "",
  dataWaznosciDowodu: "",
  oznaczenieOrganuKtoryWydalDowod: "",
  stanCywilny: "",
  imieMalzonka: "",
  nazwiskoRodoweMalzonka: "",
  numerPeselMalzonka: "",
  zdazenie: "",
  dataZdazenia: "",
  oznaczenieAktuMalzenstwa: "",
  oznaczenieUrzeduStanuCywilnego: "",
  version: "",
  adresElektroniczny: "",
};

export default function PeselForm() {
  // ‚úÖ –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const [savedValues, setSavedValues] = useState(() => {
    const saved = localStorage.getItem("peselFormData");
    return saved ? { ...defaultValues, ...JSON.parse(saved) } : defaultValues;
  });

  // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
  const handleFieldChange = (field, value, setFieldValue) => {
    setFieldValue(field, value);
    const updated = { ...savedValues, [field]: value };
    setSavedValues(updated);
    localStorage.setItem("peselFormData", JSON.stringify(updated));
  };

  return (
    <div className={css.formBox}>
      <h2>üßæ Formularz PESEL / Wniosek o nadanie numeru PESEL</h2>

      <Formik
        initialValues={savedValues}
        validationSchema={PeselSchema}
        enableReinitialize
        onSubmit={(values) => fillPdf(values)}
      >
        {({ values, setFieldValue, resetForm }) => (
          <Form>
          <div className={css.formGrid}>
            {/* üîπ Wnioskodawca / Applicant / –ó–∞—è–≤–Ω–∏–∫ */}
            <h3 className={css.sectionTitle}>Wnioskodawca / Applicant / –ó–∞—è–≤–Ω–∏–∫</h3>
            <FieldBlock name="imie" label="Imiƒô / Name / –Ü–º‚Äô—è" placeholder="np. Jan" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="nazwisko" label="Nazwisko / Surname / –ü—Ä—ñ–∑–≤–∏—â–µ" placeholder="np. Kowalski" {...{ values, setFieldValue, handleFieldChange }} />
            {/* üîπ Adres do korespondencji osoby, kt√≥ra sk≈Çada wniosek */}
            <h3 className={css.sectionTitle}>Adres do korespondencji osoby, kt√≥ra sk≈Çada wniosek / Correspondence address of the applicant / –ê–¥—Ä–µ—Å–∞ –¥–ª—è –∫–æ—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ü—ñ—ó –æ—Å–æ–±–∏, —è–∫–∞ –ø–æ–¥–∞—î –∑–∞—è–≤—É</h3>
            <FieldBlock name="ulica" label="Ulica / Street / –í—É–ª–∏—Ü—è" placeholder="np. Piƒôkna" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="numerDomu" label="Numer domu / House number / –ù–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É" placeholder="np. 12" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="numerLokalu" label="Numer lokalu / Apartment number / –ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä–∏" placeholder="np. 4" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="kodPocztowy" label="Kod pocztowy / Postal code / –ü–æ—à—Ç–æ–≤–∏–π –∫–æ–¥" placeholder="np. 00-950" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="miejscowosc" label="Miejscowo≈õƒá / City / –ú—ñ—Å—Ç–æ" placeholder="np. Warszawa" {...{ values, setFieldValue, handleFieldChange }} />
        
            {/* üîπ Dane osoby, kt√≥rej dotyczy wniosek */}
            <h3 className={css.sectionTitle}>Dane osoby, kt√≥rej dotyczy wniosek / Person concerned / –û—Å–æ–±–∞, —è–∫–æ—ó —Å—Ç–æ—Å—É—î—Ç—å—Å—è –∑–∞—è–≤–∞</h3>
            <FieldBlock name="imiePierwszeKtorejDotyczyWniosek" label="Imiƒô pierwsze / First name / –ü–µ—Ä—à–µ —ñ–º‚Äô—è" placeholder="np. Anna" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="imieDrugieKtorejDotyczyWniosek" label="Imiƒô drugie / Second name / –î—Ä—É–≥–µ —ñ–º‚Äô—è" placeholder="opcjonalne" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="imieKolejneKtorejDotyczyWniosek" label="Imiƒô kolejne / Additional name / –ù–∞—Å—Ç—É–ø–Ω–µ —ñ–º‚Äô—è" placeholder="opcjonalne" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="nazwiskoKtorejDotyczyWniosek" label="Nazwisko / Surname / –ü—Ä—ñ–∑–≤–∏—â–µ" placeholder="np. Nowak" {...{ values, setFieldValue, handleFieldChange }} />
            <RadioGroup
              label="P≈Çeƒá / Gender / –°—Ç–∞—Ç—å"
              name="plec"
              options={[
                { value: "kobieta", label: "Kobieta / Female / –ñ—ñ–Ω–∫–∞" },
                { value: "mezczyzna", label: "Mƒô≈ºczyzna / Male / –ß–æ–ª–æ–≤—ñ–∫" },
              ]}
              {...{ values, setFieldValue, handleFieldChange }}
            />
            {/* üîπ Data urodzenia / Date of birth / –î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è */}
            <FieldBlock name="dataUrodzenia" type="date" label="Data urodzenia / Date of birth / –î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è" placeholder="RRRR-MM-DD" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="krajUrodzenia" label="Kraj urodzenia / Country of birth / –ö—Ä–∞—ó–Ω–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è" placeholder="np. Polska" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="krajMiejscaZamieszkania" label="Kraj zamieszkania / Country of residence / –ö—Ä–∞—ó–Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è" placeholder="np. Polska" {...{ values, setFieldValue, handleFieldChange }} />
        
            {/* üîπ Obywatelstwo / Citizenship / –ì—Ä–æ–º–∞–¥—è–Ω—Å—Ç–≤–æ */}
            <h3 className={css.sectionTitle}>Obywatelstwo / Citizenship / –ì—Ä–æ–º–∞–¥—è–Ω—Å—Ç–≤–æ</h3>
            <RadioGroup
              label="Obywatelstwo / Citizenship / –ì—Ä–æ–º–∞–¥—è–Ω—Å—Ç–≤–æ"
              name="obywatelstwo"
              options={[
                { value: "obywatelstwo-polskie", label: "Polskie / Polish / –ü–æ–ª—å—Å—å–∫–µ" },
                { value: "bezpa≈Ñstwowiec", label: "Bezpa≈Ñstwowiec / Stateless / –ë–µ–∑ –≥—Ä–æ–º–∞–¥—è–Ω—Å—Ç–≤–∞" },
                { value: "inne", label: "Inne / Other / –Ü–Ω—à–µ" },
              ]}
              {...{ values, setFieldValue, handleFieldChange }}
            />
            {values.obywatelstwo === "inne" && (
              <FieldBlock name="obywatelstwoInne" label="Podaj kraj / Specify country / –í–∫–∞–∂—ñ—Ç—å –∫—Ä–∞—ó–Ω—É" placeholder="np. Ukraina" {...{ values, setFieldValue, handleFieldChange }} />
            )}
        
            {/* üîπ Ostatnio wydany paszport obywatela polskiego */}
            {values.obywatelstwo === "obywatelstwo-polskie" && (
              <>
                <h3 className={css.sectionTitle}>Ostatnio wydany paszport obywatela polskiego / Most recently issued passport of a Polish citizen / –û—Å—Ç–∞–Ω–Ω—ñ–π –≤–∏–¥–∞–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç –≥—Ä–æ–º–∞–¥—è–Ω–∏–Ω–∞ –ü–æ–ª—å—â—ñ</h3>
                <FieldBlock name="numerPaszportu" label="Numer paszportu / Passport number / –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞" placeholder="np. AB123456" {...{ values, setFieldValue, handleFieldChange }} />
                <FieldBlock name="dataWaznosciPaszportu" type="date" label="Data wa≈ºno≈õci paszportu / Passport expiry date / –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –ø–∞—Å–ø–æ—Ä—Ç–∞" placeholder="RRRR-MM-DD" {...{ values, setFieldValue, handleFieldChange }} />
              </>
            )}

                        {/* üîπ Dokument podr√≥≈ºy cudzoziemca lub inny dokument potwierdzajƒÖcy to≈ºsamo≈õƒá i obywatelstwo */}
                        <h3 className={css.sectionTitle}>Dokument podr√≥≈ºy cudzoziemca lub inny dokument potwierdzajƒÖcy to≈ºsamo≈õƒá i obywatelstwo</h3>
            <FieldBlock name="numerPodrozy" label="Numer dokumentu podr√≥≈ºy / Travel document number / –ù–æ–º–µ—Ä –ø—Ä–æ—ó–∑–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞" placeholder="np. TR123456" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="dataWaznosciPodrozy" type="date" label="Data wa≈ºno≈õci dokumentu podr√≥≈ºy / Expiry date of travel document / –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –ø—Ä–æ—ó–∑–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞" placeholder="RRRR-MM-DD" {...{ values, setFieldValue, handleFieldChange }} />

            {/* üîπ Dodatkowe dane osoby, kt√≥rej wniosek dotyczy, oraz dane jej rodzic√≥w */}
              <h3 className={css.sectionTitle}>Dodatkowe dane osoby, kt√≥rej wniosek dotyczy, oraz dane jej rodzic√≥w</h3>
              <FieldBlock name="nazwiskoRodowe" label="Nazwisko rodowe / Maiden name / –î—ñ–≤–æ—á–µ –ø—Ä—ñ–∑–≤–∏—â–µ" placeholder="np. Kowalska" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="miejsceUrodzenia" label="Miejsce urodzenia / Place of birth / –ú—ñ—Å—Ü–µ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è" placeholder="np. Warszawa" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="oznaczenieAktuUrodzenia" label="Oznaczenie urzƒôdu stanu cywilnego, w kt√≥rym zosta≈Ç sporzƒÖdzony akt urodzenia / Birth certificate reference / –ù–æ–º–µ—Ä —Å–≤—ñ–¥–æ—Ü—Ç–≤–∞ –ø—Ä–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è" placeholder="np. 123/2020" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="oznaczenieUrzeduAktUrodzenia" label="Oznaczenie urzƒôdu stanu cywilnego, w kt√≥rym zosta≈Ç sporzƒÖdzony akt urodzenia / Registry office where the birth certificate was issued / –û—Ä–≥–∞–Ω –†–ê–¶–°, —è–∫–∏–π –≤–∏–¥–∞–≤ —Å–≤—ñ–¥–æ—Ü—Ç–≤–æ –ø—Ä–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è" placeholder="np. UrzƒÖd Stanu Cywilnego Warszawa" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="imieOjca" label="Imiƒô ojca / Father‚Äôs name / –Ü–º‚Äô—è –±–∞—Ç—å–∫–∞" placeholder="np. Piotr" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="nazwiskoRodoweOjca" label="Nazwisko rodowe ojca / Father‚Äôs family name / –ü—Ä—ñ–∑–≤–∏—â–µ –±–∞—Ç—å–∫–∞" placeholder="np. Kowalski" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="imieMatki" label="Imiƒô matki / Mother‚Äôs name / –Ü–º‚Äô—è –º–∞—Ç–µ—Ä—ñ" placeholder="np. Maria" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="nazwiskoRodoweMatki" label="Nazwisko rodowe matki / Mother‚Äôs maiden name / –î—ñ–≤–æ—á–µ –ø—Ä—ñ–∑–≤–∏—â–µ –º–∞—Ç–µ—Ä—ñ" placeholder="np. Nowak" {...{ values, setFieldValue, handleFieldChange }} />

            {/* üîπ Ostatnio wydany dow√≥d osobisty obywatela polskiego */}
          {values.obywatelstwo === "obywatelstwo-polskie" && (
            <>
              <h3 className={css.sectionTitle}>Ostatnio wydany dow√≥d osobisty obywatela polskiego / Most recently issued ID card of a Polish citizen / –û—Å—Ç–∞–Ω–Ω—ñ–π –≤–∏–¥–∞–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç –≥—Ä–æ–º–∞–¥—è–Ω–∏–Ω–∞ –ü–æ–ª—å—â—ñ</h3>
              <FieldBlock name="numerDowodu" label="Numer dowodu / ID number / –ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="dataWaznosciDowodu" type="date" label="Data wa≈ºno≈õci dowodu / ID expiry date / –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –¥–æ–∫—É–º–µ–Ω—Ç–∞" {...{ values, setFieldValue, handleFieldChange }} />
              <FieldBlock name="oznaczenieOrganuKtoryWydalDowod" label="Organ wydajƒÖcy dow√≥d / Issuing authority / –û—Ä–≥–∞–Ω, —â–æ –≤–∏–¥–∞–≤ –¥–æ–∫—É–º–µ–Ω—Ç" {...{ values, setFieldValue, handleFieldChange }} />
            </>
          )}

            {/* üîπ Dane o stanie cywilnym osoby, kt√≥rej wniosek dotyczy */}
            <h3 className={css.sectionTitle}>Dane o stanie cywilnym osoby, kt√≥rej wniosek dotyczy / Marital status of the person the application concerns / –î–∞–Ω—ñ –ø—Ä–æ —Å—ñ–º–µ–π–Ω–∏–π —Å—Ç–∞–Ω –æ—Å–æ–±–∏, —è–∫–æ—ó —Å—Ç–æ—Å—É—î—Ç—å—Å—è –∑–∞—è–≤–∞</h3>
            <RadioGroup
              label="Stan cywilny / Marital status / –°—ñ–º–µ–π–Ω–∏–π —Å—Ç–∞–Ω"
              name="stanCywilny"
              options={[
                { value: "kawaler-panna", label: "Kawaler / Panna / Single / –ù–µ–∑–∞–º—ñ–∂–Ω—ñ–π / –Ω–µ–æ–¥—Ä—É–∂–µ–Ω–∏–π" },
                { value: "≈ºonaty-zamƒô≈ºna", label: "≈ªonaty / Zamƒô≈ºna / Married / –û–¥—Ä—É–∂–µ–Ω–∏–π / –ó–∞–º—ñ–∂–Ω—è" },
                { value: "rozwiedziony-rozwiedziona", label: "Rozwiedziony / Rozwiedziona / Divorced / –†–æ–∑–ª—É—á–µ–Ω–∏–π / –†–æ–∑–ª—É—á–µ–Ω–∞" },
                { value: "wdowiec-wdowa", label: "Wdowiec / Wdowa / Widower / Widow / –í–¥—ñ–≤–µ—Ü—å / –í–¥–æ–≤–∞" },
              ]}
              {...{ values, setFieldValue, handleFieldChange }}
            />
            {values.stanCywilny === "≈ºonaty-zamƒô≈ºna" && (
              <>
                <FieldBlock name="imieMalzonka" label="Imiƒô ma≈Ç≈ºonka / Spouse‚Äôs name / –Ü–º‚Äô—è —á–æ–ª–æ–≤—ñ–∫–∞ –∞–±–æ –¥—Ä—É–∂–∏–Ω–∏" placeholder="np. Piotr" {...{ values, setFieldValue, handleFieldChange }} />
                <FieldBlock name="nazwiskoRodoweMalzonka" label="Nazwisko rodowe ma≈Ç≈ºonka / Spouse‚Äôs maiden name / –î—ñ–≤–æ—á–µ –ø—Ä—ñ–∑–≤–∏—â–µ —á–æ–ª–æ–≤—ñ–∫–∞ –∞–±–æ –¥—Ä—É–∂–∏–Ω–∏" placeholder="np. Kowalska" {...{ values, setFieldValue, handleFieldChange }} />
                <FieldBlock name="numerPeselMalzonka" label="PESEL ma≈Ç≈ºonka / Spouse‚Äôs PESEL / PESEL —á–æ–ª–æ–≤—ñ–∫–∞ –∞–±–æ –¥—Ä—É–∂–∏–Ω–∏" placeholder="np. 44051401359" {...{ values, setFieldValue, handleFieldChange }} />
              </>
            )}
        
            {/* üîπ Zdarzenia / Events affecting marriage / –ü–æ–¥—ñ—ó, —â–æ –≤–ø–ª–∏–≤–∞—é—Ç—å –Ω–∞ —à–ª—é–± */}
            <h3 className={css.sectionTitle}>Ostatnie zdarzenie majƒÖce wp≈Çyw na ma≈Ç≈ºe≈Ñstwo / Last event affecting marriage / –û—Å—Ç–∞–Ω–Ω—è –ø–æ–¥—ñ—è, —â–æ –≤–ø–ª–∏–Ω—É–ª–∞ –Ω–∞ —à–ª—é–±</h3>
            <RadioGroup
              label="Zdarzenie / Event / –ü–æ–¥—ñ—è"
              name="zdazenie"
              options={[
                { value: "zawarcie-zwiƒÖzku", label: "Zawarcie zwiƒÖzku ma≈Ç≈ºe≈Ñskiego / Marriage / –®–ª—é–±" },
                { value: "rozwiƒÖzanie-zwiƒÖzku", label: "RozwiƒÖzanie ma≈Ç≈ºe≈Ñstwa / Divorce / –†–æ–∑—ñ—Ä–≤–∞–Ω–Ω—è —à–ª—é–±—É" },
                { value: "uniewa≈ºnienie-zwiƒÖzku", label: "Uniewa≈ºnienie zwiƒÖzku ma≈Ç≈ºe≈Ñskiego / Annulment of marriage / –í–∏–∑–Ω–∞–Ω–Ω—è —à–ª—é–±—É –Ω–µ–¥—ñ–π—Å–Ω–∏–º" },
                { value: "zgon-ma≈Ç≈ºonka", label: "Zgon ma≈Ç≈ºonka (zaznacz, je≈õli znasz datƒô zgonu) / Death of spouse (check if you know the date of death) / –°–º–µ—Ä—Ç—å —á–æ–ª–æ–≤—ñ–∫–∞ –∞–±–æ –¥—Ä—É–∂–∏–Ω–∏ (–≤–∫–∞–∂—ñ—Ç—å, —è–∫—â–æ –∑–Ω–∞—î—Ç–µ –¥–∞—Ç—É —Å–º–µ—Ä—Ç—ñ)" },
                { value: "zgon-ma≈Ç≈ºonka-bez-daty-zgonu", label: "Zgon ma≈Ç≈ºonka - znalezienie zw≈Çok (zaznacz, je≈õli ma≈Ç≈ºonek zmar≈Ç, ale znasz jedynie datƒô znalezienia cia≈Ça) / Death of spouse ‚Äì body found (check if spouse died but you only know the date the body was found) / –°–º–µ—Ä—Ç—å —á–æ–ª–æ–≤—ñ–∫–∞ –∞–±–æ –¥—Ä—É–∂–∏–Ω–∏ ‚Äì –≤–∏—è–≤–ª–µ–Ω–Ω—è —Ç—ñ–ª–∞ (–≤–∫–∞–∂—ñ—Ç—å, —è–∫—â–æ —á–æ–ª–æ–≤—ñ–∫ –∞–±–æ –¥—Ä—É–∂–∏–Ω–∞ –ø–æ–º–µ—Ä–ª–∏, –∞–ª–µ –≤—ñ–¥–æ–º–∞ –ª–∏—à–µ –¥–∞—Ç–∞ –≤–∏—è–≤–ª–µ–Ω–Ω—è —Ç—ñ–ª–∞)" },
              ]}
              {...{ values, setFieldValue, handleFieldChange }}
            />
            <FieldBlock name="dataZdazenia" type="date" label="Data zdarzenia / Event date / –î–∞—Ç–∞ –ø–æ–¥—ñ—ó" placeholder="RRRR-MM-DD" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="oznaczenieAktuMalzenstwa" label="Oznaczenie aktu ma≈Ç≈ºe≈Ñstwa albo sygnatura akt sƒÖdu, kt√≥ry rozwiƒÖza≈Ç/uniewa≈ºni≈Ç ma≈Ç≈ºe≈Ñstwo, albo numer aktu zgonu ma≈Ç≈ºonka / Marriage certificate reference or court file reference that dissolved/annulled the marriage, or spouse‚Äôs death certificate number / –ù–æ–º–µ—Ä –∞–∫—Ç—É —à–ª—é–±—É –∞–±–æ –Ω–æ–º–µ—Ä —Å–ø—Ä–∞–≤–∏ —Å—É–¥—É, —è–∫–∏–π —Ä–æ–∑—ñ—Ä–≤–∞–≤/–≤–∏–∑–Ωa–≤ —à–ª—é–± –Ω–µ–¥—ñ–π—Å–Ω–∏–º, –∞–±–æ –Ω–æ–º–µ—Ä —Å–≤—ñ–¥–æ—Ü—Ç–≤–∞ –ø—Ä–æ —Å–º–µ—Ä—Ç—å –ø–æ–¥—Ä—É–∂–∂—è" placeholder="np. 123/2020" {...{ values, setFieldValue, handleFieldChange }} />
            <FieldBlock name="oznaczenieUrzeduStanuCywilnego" label="Oznaczenie urzƒôdu stanu cywilnego, w kt√≥rym sporzƒÖdzono akt ma≈Ç≈ºe≈Ñstwa albo akt zgonu, albo oznaczenie sƒÖdu, kt√≥ry rozwiƒÖza≈Ç/uniewa≈ºni≈Ç ma≈Ç≈ºe≈Ñstwo / Registry office where the marriage or death certificate was issued, or court that dissolved/annulled the marriage / –û—Ä–≥–∞–Ω –†–ê–¶–°, –¥–µ –≤–∏–¥–∞–Ω–æ –∞–∫—Ç —à–ª—é–±—É –∞–±–æ —Å–≤—ñ–¥–æ—Ü—Ç–≤–æ –ø—Ä–æ —Å–º–µ—Ä—Ç—å, –∞–±–æ —Å—É–¥, —è–∫–∏–π —Ä–æ–∑—ñ—Ä–≤–∞–≤/–≤–∏–∑–Ωa–≤ —à–ª—é–± –Ω–µ–¥—ñ–π—Å–Ω–∏–º" placeholder="np. UrzƒÖd Stanu Cywilnego Warszawa" {...{ values, setFieldValue, handleFieldChange }} />
          </div>
        
          {/* üîπ Forma dokumentu / Form of notification / –§–æ—Ä–º–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è */}
          <h3 className={css.sectionTitle}>Forma powiadomienia / Form of notification / –§–æ—Ä–º–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</h3>
          <RadioGroup
            name="version"
            options={[
              { value: "papierowa", label: "Papierowa / Paper / –ü–∞–ø–µ—Ä–æ–≤–∞" },
              { value: "elektroniczna", label: "Elektroniczna / Electronic / –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞" },
            ]}
            {...{ values, setFieldValue, handleFieldChange }}
          />
          {values.version === "elektroniczna" && (
            <FieldBlock name="adresElektroniczny" label="Adres elektroniczny / Email address / –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞" placeholder="np. jan.kowalski@example.com" {...{ values, setFieldValue, handleFieldChange }} />
          )}
        
          {/* üîπ –ö–Ω–æ–ø–∫–∏ */}
          <div className={css.buttons}>
            <button type="submit">üìÑ Pobierz PDF / Download PDF / –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF</button>
            <button type="button" onClick={() => { resetForm(); setSavedValues(defaultValues); localStorage.removeItem("peselFormData"); }}>
              üßπ Wyczy≈õƒá / Clear / –û—á–∏—Å—Ç–∏—Ç–∏
            </button>
          </div>
        </Form>
        
        
        )}
      </Formik>
    </div>
  );
}

// üî∏ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª–µ–π
function FieldBlock({ name, label, values, setFieldValue, handleFieldChange, type = "text", placeholder }) {
  return (
    <div className={css.fieldWrapper}>
      <label htmlFor={name}>{label}</label>
      <div className={css.inputContainer}>
        <Field
          id={name}
          name={name}
          type={type}
          className={css.field}
          value={values[name] || ""}
          onChange={(e) => handleFieldChange(name, e.target.value, setFieldValue)}
          placeholder={placeholder} // <- –î–æ–±–∞–≤–ª—è–µ–º placeholder —Å—é–¥–∞
        />
        {values[name] && (
          <button
            type="button"
            className={css.clearBtn}
            onClick={() => handleFieldChange(name, "", setFieldValue)}
          >
            <AiOutlineCloseCircle />
          </button>
        )}
      </div>
      <ErrorMessage name={name} component="div" className={css.errorMessage} />
    </div>
  );
}


// üî∏ –†–∞–¥–∏–æ-–≥—Ä—É–ø–ø–∞ (–Ω–æ–≤–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –≤–µ—Ä—Å–∏—è)
function RadioGroup({ label, name, options, values, setFieldValue, handleFieldChange }) {
  return (
    <div className={css.fieldWrapper}>
      {label && <label>{label}</label>}
      <div className={css.radioGroup}>
        {options.map((opt) => (
          <label key={opt.value}>
            <Field
              type="radio"
              name={name}
              value={opt.value}
              checked={values[name] === opt.value}
              onChange={() => handleFieldChange(name, opt.value, setFieldValue)}
            />
            <span>{opt.label}</span>
          </label>
        ))}
      </div>
    </div>
  );
}
